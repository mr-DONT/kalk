import os
import webbrowser


def AVTOR():
    url = "https://t.me/Mr_D0NT"
    webbrowser.open(url)
Password = True
USERKEY = ("1305") #ПАРОЛЬ СКОПИРУЙТЕ И ВСТАВЬТЕ В СТРОКУ
while Password:
    if input("Введите код для активации: ") == USERKEY:
        Password = False
        print("Код введён правильно")
print("Утилита для математики")
print("1. Алгебра")
print("2. Геометрия")
print("3. Автор кода")
iVIB = int(input("какой предмет выберем: "))
if iVIB == 1:
    print("1. Решение дискриминантов")
    print("2. Число ПИ")
    print("3. Перевод системы счисления")
    print("4. Сложение")
    print("5. Вычитание")
    print("6. Деление")
    print("7. Умножение")
    ALVIB =int(input("Выбери функцию: "))
    if ALVIB == 1:
        ADIS = int(input("Введите переменную A: "))
        BDIS = int(input("Введите переменную B: "))
        CDIS = int(input("Введите переменную C: "))
        DDIS = BDIS ** 2 - 4 * ADIS * CDIS
        print("DDIS=", BDIS, "- 4 *", ADIS, "*", CDIS, "=", DDIS)
        if DDIS <= 0:
            print("Нет решения т.к. дискриминант меньше или равно нулю.")
            exit()
        else:
            XD = 2 * ADIS
            KD = DDIS ** 0.5
            print(KD)
            XA1 = -BDIS + KD
            XA2 = -BDIS - KD
            X1 = XA1 / XD
            X2 = XA2 / XD
            print("X1=", X1)
            print("Х2=", X2)
            print("\nНажмите любую клавишу для продолжения...")
            os.system("pause > nul" if os.name == "nt" else "read > /dev/null")
    elif ALVIB == 2:
        print("-" * 50 + "\nВычисление числа Пи с точностью до n знаков после запятой:\n" + "-" * 50,)
        print("3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277016711390098488240128583616035637076601047101819429555961989467678374494482553797747268471040475346462080466842590694912933136770289891521047521620569660240580381501935112533824300355876402474964732639141992726042699227967823547816360093417216412199245863150302861829745557067498385054945885869269956909272107975093029553211653449872027559602364806654991198818347977535663698074265425278625518184175746728909777727938000816470600161452491921732172147723501414419735685481613611573525521334757418494684385233239073941433345477624168625189835694855620992192221842725502542568876717904946016534668049886272327917860857843838279679766814541009538837863609506800642251252051173929848960841284886269456042419652850222106611863067442786220391949450471237137869609563643719172874677646575739624138908658326459958133904780275900994657640789512694683983525957098258226205224894077267194782684826014769909026401363944374553050682034962524517493996514314298091906592509372216964615157098583874105978859597729754989301617539284681382686838689427741559918559252459539594310499725246808459872736446958486538367362226260991246080512438843904512441365497627807977156914359977001296160894416948685558484063534220722258284886481584560285060168427394522674676788952521385225499546667278239864565961163548862305774564980355936345681743241125150760694794510965960940252288797108931456691368672287489405601015033086179286809208747609178249385890097149096759852613655497818931297848216829989487226588048575640142704775551323796414515237462343645428584447952658678210511413547357395231134271661021359695362314429524849371871101457654035902799344037420073105785390621983874478084784896833214457138687519435064302184531910484810053706146806749192781911979399520614196634287544406437451237181921799983910159195618146751426912397489409071864942319615679452080951465502252316038819301420937621378559566389377870830390697920773467221825625996615014215030680384477345492026054146659252014974428507325186660021324340881907104863317346496514539057962685610055081066587969981635747363840525714591028970641401109712062804390397595156771577004203378699360072305587631763594218731251471205329281918261861258673215791984148488291644706095752706957220917567116722910981690915280173506712748583222871835209353965725121083579151369882091444210067510334671103141267111369908658516398315019701651511685171437657618351556508849099898599823873455283316355076479185358932261854896321329330898570642046752590709154814165498594616371802709819943099244889575712828905923233260972997120844335732654893823911932597463667305836041428138830320382490375898524374417029132765618093773444030707469211201913020330380197621101100449293215160842444859637669838952286847831235526582131449576857262433441893039686426243410773226978028073189154411010446823252716201052652272111660396665573092547110557853763466820653109896526918620564769312570586356620185581007293606598764861179104533488503461136576867532494416680396265797877185560845529654126654085306143444318586769751456614068007002378776591344017127494704205622305389945613140711270004078547332699390814546646458807972708266830634328587856983052358089330657574067954571637752542021149557615814002501262285941302164715509792592309907965473761255176567513575178296664547791745011299614890304639947132962107340437518957359614589019389713111790429782856475032031986915140287080859904801094121472213179476477726224142548545403321571853061422881375850430633217518297986622371721591607716692547487389866549494501146540628433663937900397692656721463853067360965712091807638327166416274888800786925602902284721040317211860820419000422966171196377921337575114959501566049631862947265473642523081770367515906735023507283540567040386743513622224771589150495309844489333096340878076932599397805419341447377441842631298608099888687413260472156951623965864573021631598193195167353812974167729478672422924654366800980676928238280689964004824354037014163149658979409243237896907069779422362508221688957383798623001593776471651228935786015881617557829735233446042815126272037343146531977774160319906655418763979293344195215413418994854447345673831624993419131814809277771038638773431772075456545322077709212019051660962804909263601975988281613323166636528619326686336062735676303544776280350450777235547105859548702790814356240145171806246436267945612753181340783303362542327839449753824372058353114771199260638133467768796959703098339130771098704085913374641442822772634659470474587847787201927715280731767907707157213444730605700733492436931138350493163128404251219256517980694113528013147013047816437885185290928545201165839341965621349143415956258658655705526904965209858033850722426482939728584783163054857568291904443000872390133512358504642635757391501521252891239458716326457446234159139229377775773860186519433723938562773272520972273929019656243752142575429152486373588560217111809001472212202127267497754446692305845486304413212290206102033052555254704668669329112473730746559293558945122437043842842611746162364759198108588624214167155554234710764253950827247539068665422607813357981065223796741517567248904156312714599959987524047253059843994212726622354143521848932235330574779498029131509005514221773173364193679432993672940799048826815618934177668179108806781605115241513")

    elif ALVIB == 3:
        print("-" * 19 + "\nСистема счисления\n" + "-" * 19)


        def convert_base(number: str, from_base: int, to_base: int) -> str:
            """
            Перевод числа из одной системы счисления в другую.

            :param number: Число в виде строки.
            :param from_base: Система счисления исходного числа.
            :param to_base: Система счисления целевого числа.
            :return: Число в целевой системе счисления в виде строки.
            """
            decimal_number = int(number, from_base)

            def to_base_n(num: int, base: int) -> str:
                if num == 0:
                    return "0"
                digits = []
                while num > 0:
                    remainder = num % base
                    digits.append(str(remainder) if remainder < 10 else chr(55 + remainder))
                    num //= base
                return ''.join(reversed(digits))

            return to_base_n(decimal_number, to_base)


        if __name__ == "__main__":
            number = input("Введите число: ")
            from_base = int(input("Введите исходную систему счисления: "))
            to_base = int(input("Введите целевую систему счисления: "))

            result = convert_base(number, from_base, to_base)
            print(f"Число {number} из системы счисления {from_base} в систему {to_base} -> {result}")
            print("\nНажмите любую клавишу для продолжения...")
            os.system("pause > nul" if os.name == "nt" else "read > /dev/null")


        else:
            exit()

    elif ALVIB == 4:
        ALASL = int(input("Первое слогаемое: "))
        ALBSL = int(input("Второе слогаемое: "))
        ALOSL = ALASL + ALBSL
        print("Ответ:", ALOSL)
    elif ALVIB == 5:
        ALAVI = int(input("Первое вычитаемое: "))
        ALBVI = int(input("Второе вычитаемое: "))
        ALOVI = ALAVI - ALBVI
        print("Ответ:", ALOVI)
    elif ALVIB == 6:
        ALADEL = int(input("Делимое: "))
        ALBDEL = int(input("Делитель: "))
        ALODEL = ALADEL / ALBDEL
        print("Ответ:", ALODEL)
    elif ALVIB == 7:
        ALAUM = int(input("Первый множитель: "))
        ALBUM = int(input("Второй множитель: "))
        ALOUM = ALAUM * ALBUM
        print("Ответ:", ALOUM)
    else:
        print("Либо я НЕДОПИСАЛ КОД ДО КОНЦА ЛИБО ТЫ/ВЫ СВОИМИ КЛЕШНЯМИ НЕ СМОГЛИ ПОПАСТЬ ПО КНОПКЕ С РАЗМЕРОМ В АТОМНЫЙ КОЛАЙДЕР ИЛИ ЖЕ МАТЬ ТОГО СМОГО ДРУГА")
        exit()
elif iVIB == 2:
    print("-" * 12 + "\nГЕОМЕТРИЯ:\n" + "-" * 12)
    print("1. Нахождение площади треугольника")
    print("2. Нахождение площади паралелограмма")
    print("3. Нахождение площади квадрата")
    print("4. Нахождение площади трапеции")
    GEVIB = int(input("Выберете фунцию: "))
    if GEVIB == 1:  # треугольник = TR
        print("-" * 33 + "\nНахождение площади треугольника\n" + "-" * 33)
        ATR = int(input("Введите сторону к которой приведена высота: "))
        HTR = int(input("Введите высоту: "))
        XS = ATR * HTR
        STR = XS / 2
        print("Ответ:S=", STR)
        print("\nНажмите любую клавишу для продолжения...")
        os.system("pause > nul" if os.name == "nt" else "read > /dev/null")
    elif GEVIB == 2:  # паралелограмм = PAR
        print("-" * 35 + "\nНахождение площади паралелограмма\n" + "-" * 35)
        APAR = int(input("Введите сторону: "))  # сначало идёт "А" это сторона потом идёт "PAR" это сокращенно паралелограмм со второй переменной тоже саммое
        HPAR = int(input("Введите высоту: "))
        SPAR = APAR * HPAR
        print("Ответ:", SPAR)
        print("\nНажмите любую клавишу для продолжения...")
        os.system("pause > nul" if os.name == "nt" else "read > /dev/null")
    elif GEVIB == 3:  # квадрат = KV
        print("-" * 30 + "\nНахождение площади квадрата\n" + "-" * 30)
        AKV = int(input("Введите одну из сторон: "))
        SKV = AKV ** 2
        print("Ответ:", SKV)
        print("\nНажмите любую клавишу для продолжения...")
        os.system("pause > nul" if os.name == "nt" else "read > /dev/null")
    elif GEVIB == 4:  # трапеция = TRAP
        print("-" * 28 + "\nНахождение площади трапеции\n" + "-" * 28)
        ATRAP = int(input("Введите первое основание: "))
        BTRAP = int(input("Введите второе основание: "))
        HTRAP = int(input("Введите высоту: "))
        STRAP = (ATRAP + BTRAP) * HTRAP / 2
        print("Ответ:S=", STRAP)
        print("\nНажмите любую клавишу для продолжения...")
        os.system("pause > nul" if os.name == "nt" else "read > /dev/null")
    else:
        print("Либо я НЕДОПИСАЛ КОД ДО КОНЦА ЛИБО ТЫ/ВЫ СВОИМИ КЛЕШНЯМИ НЕ СМОГЛИ ПОПАСТЬ ПО КНОПКЕ С РАЗМЕРОМ В АТОМНЫЙ КОЛАЙДЕР ИЛИ ЖЕ МАТЬ ТОГО СМОГО ДРУГА")
        exit()
elif iVIB == 3:
    AVTOR()
else:
    print("Либо я НЕДОПИСАЛ КОД ДО КОНЦА ЛИБО ТЫ/ВЫ СВОИМИ КЛЕШНЯМИ НЕ СМОГЛИ ПОПАСТЬ ПО КНОПКЕ С РАЗМЕРОМ В АТОМНЫЙ КОЛАЙДЕР ИЛИ ЖЕ МАТЬ ТОГО СМОГО ДРУГА")
    exit()